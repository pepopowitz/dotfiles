# sjh changelog
# - change arrows from hjkl to jkil
# - make alt-n next workspace and alt-p previous workspace
# - build a command that opens multiple browsers in the current space
# - add a "balance" command to service mode
#    but it doesn't help, because the issue is that running macos spaces at the same time causes lots of windows to be part of the space but not be visible?
# - changed mod keys to include ctrl, to avoid conflicts with raycast
# - moved joining commands out of service mode! They shouldn't be so hard to get to.

# issues
# - [x] alt-c conflicts with raycast clipboard, there are probably others like that (alt-s, alt-g, maybe others?)
#   - is this a reason to configure a hyper key?
#   - or maybe ctrl-alt instead of alt in raycast?  since there are so few mappings in raycast.
# - [x] shift-alt-arrows to select text a word at a time is a conflict. yikes.
#   - no it's not! aerospace doesn't use shift-alt-arrow (or alt-arrow), it uses shift-alt-j/shift-alt-l etc (or alt-j/alt-l etc)
# - raycast got suuuuper laggy after running aerospace, and I had to kill it. It was taking seconds to come up. Is this a one time thing?

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    ## start jankyborders
    ##   ignore todoist because it shows funny borders for the quick-add window.
    'exec-and-forget borders active_color=0xff70e544 inactive_color=0xff949992 width=7.0 blacklist="Todoist"',
]

## settings that are moderately noteworthy.
# -----------
# Start AeroSpace at login
start-at-login = false

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'
# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

## settings I don't care about.
# -----------

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 11
inner.vertical = 9
outer.left = 8
outer.bottom = 8
outer.top = 8
outer.right = 8

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'


#  MAIN MODE
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''


## noteworthy bindings
# -----------

## FOCUS

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-j = 'focus left'
alt-k = 'focus down'
alt-i = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-alt-1 = 'workspace 1(JunkDrawer)'
ctrl-alt-2 = 'workspace 2(Comms)'
ctrl-alt-3 = 'workspace 3(TODOs)'
ctrl-alt-a = 'workspace AliceBlue'
ctrl-alt-b = 'workspace Bisque'
ctrl-alt-c = 'workspace Cornsilk'
ctrl-alt-d = 'workspace DeepSkyBlue'
ctrl-alt-e = 'workspace Emerald'
ctrl-alt-f = 'workspace FireBrick'

# Go to first empty workspace
ctrl-alt-0 = "exec-and-forget ~/.aerospace/focus-empty-workspace.sh"

# sjh unsolved: multiple devices
# ctrl-alt-1 = 'workspace 1(JunkDrawer)'
# ctrl-alt-2 = 'workspace 2(Comms)'
# ctrl-alt-3 = 'workspace 3(CaseParts)'
# ctrl-alt-4 = 'workspace 4(Friends)'
# ctrl-alt-5 = 'workspace 5(Supernova)'
# ctrl-alt-6 = 'workspace 6(Art)'
# ctrl-alt-7 = 'workspace 7(Sprouts)'
# ctrl-alt-8 = 'workspace 8(Aerospace)'

## mimic native spaces navigation; turn off macos shortcuts for these!
ctrl-left = 'workspace prev'
ctrl-right = 'workspace next'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
ctrl-alt-tab = 'workspace-back-and-forth'

## MOVE

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-j = 'move left'
alt-shift-k = 'move down'
alt-shift-i = 'move up'
alt-shift-l = 'move right'

# join directionally
ctrl-alt-shift-j = 'join-with left'
ctrl-alt-shift-k = 'join-with down'
ctrl-alt-shift-i = 'join-with up'
ctrl-alt-shift-l = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-alt-shift-1 = 'move-node-to-workspace 1(JunkDrawer)'
ctrl-alt-shift-2 = 'move-node-to-workspace 2(Comms)'
ctrl-alt-shift-3 = 'move-node-to-workspace 3(TODOs)'
ctrl-alt-shift-a = 'move-node-to-workspace AliceBlue'
ctrl-alt-shift-b = 'move-node-to-workspace Bisque'
ctrl-alt-shift-c = 'move-node-to-workspace Cornsilk'
ctrl-alt-shift-d = 'move-node-to-workspace DeepSkyBlue'
ctrl-alt-shift-e = 'move-node-to-workspace Emerald'
ctrl-alt-shift-f = 'move-node-to-workspace FireBrick'

# Move current window to first empty workspace and focus on it
ctrl-alt-shift-0 = "exec-and-forget ~/.aerospace/move-to-empty-workspace-and-focus.sh"

# ctrl-alt-shift-3 = 'move-node-to-workspace 3(CaseParts)'
# ctrl-alt-shift-4 = 'move-node-to-workspace 4(Friends)'
# ctrl-alt-shift-5 = 'move-node-to-workspace 5(Supernova)'
# ctrl-alt-shift-6 = 'move-node-to-workspace 6(Art)'
# ctrl-alt-shift-7 = 'move-node-to-workspace 7(Sprouts)'
# ctrl-alt-shift-8 = 'move-node-to-workspace 8(Aerospace)'

## mimic native spaces navigation
ctrl-alt-shift-left = 'move-node-to-workspace prev'
ctrl-alt-shift-right = 'move-node-to-workspace next'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
ctrl-alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

## MODES
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-semicolon = 'mode config'
alt-comma = 'mode layout'
alt-o = 'mode open'


# LAYOUT MODE
[mode.layout.binding]
esc = ['mode main']

# Still want to be able to focus windows in layout mode
alt-j = 'focus left'
alt-k = 'focus down'
alt-i = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
slash = 'layout tiles horizontal vertical'
comma = 'layout accordion horizontal vertical'
# reset tree before setting layout (for swapping working location, i.e. on laptop vs monitor)s = ['flatten-workspace-tree', 'layout tiles horizontal']
alt-slash = ['flatten-workspace-tree', 'layout tiles horizontal']
alt-comma = ['flatten-workspace-tree', 'layout accordion horizontal']

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
shift-minus = 'resize smart -100'
shift-equal = 'resize smart +100'

b = ['balance-sizes', 'mode main']

# reset tiled/accordioned layout to even distribution
r = ['flatten-workspace-tree', 'mode main']

# toggle specific window between floating and tiling
f = ['layout floating']
t = ['layout tiling horizontal']

# set all to floating
alt-f = [
    "exec-and-forget aerospace list-windows --workspace focused | awk -F '|' '{print $1}' | xargs -I {} aerospace layout --window-id {} floating",
    "mode main",
]

# set all to tiles
alt-t = [
    "exec-and-forget aerospace list-windows --workspace focused | awk -F '|' '{print $1}' | xargs -I {} aerospace layout --window-id {} tiling",
    "exec-and-forget aerospace list-windows --workspace focused | awk -F '|' '{print $1}' | xargs -I {} aerospace layout --window-id {} tiles horizontal",
    "mode main",
]


# set all to accordion (not sure this actually works)
alt-a = [
    "exec-and-forget aerospace list-windows --workspace focused | awk -F '|' '{print $1}' | xargs -I {} aerospace layout --window-id {} tiling",
    "exec-and-forget aerospace list-windows --workspace focused | awk -F '|' '{print $1}' | xargs -I {} aerospace layout --window-id {} accordion horizontal",
    "mode main",
]

# auto-layout (doesn't work well)
a = [
    "exec-and-forget aerospace list-windows --workspace focused | awk -F '|' '{print $1}' | xargs -I {} aerospace layout --window-id {} tiling",
    "exec-and-forget aerospace list-windows --workspace focused | awk -F '|' '{print $1}' | xargs -I {} aerospace layout --window-id {} h_tiles",
    "focus --dfs-index 0",
    "join-with right",
    "focus --dfs-index 2",
    "join-with right",
    "focus --dfs-index 4",
    "join-with right",
    "focus --dfs-index 6",
    "join-with right",
    "focus --dfs-index 8",
    "join-with right",
    "focus --dfs-index 10",
    "join-with right",
    "focus --dfs-index 12",
    "join-with right",
    "focus --dfs-index 14",
    "join-with right",
    "focus --dfs-index 16",
    "join-with right",
    "mode main",
]

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']


# OPEN MODE
[mode.open.binding]
esc = ['mode main']

backspace = ['close-all-windows-but-current', 'mode main']

# open windows for camunda
# edge with personal profile (sjh)
s = [
    "exec-and-forget open -na 'Microsoft Edge' --args --new-window --profile-directory='Default'",
    "mode main",
]
# edge with work profile
w = [
    "exec-and-forget open -na 'Microsoft Edge' --args --new-window --profile-directory='Profile 1'",
    "mode main",
]

# docs windows
d = [
    "layout horizontal",
    "exec-and-forget open -na 'Microsoft Edge' --args --new-window 'https://docs.camunda.io'",
    "exec-and-forget open -na 'Microsoft Edge' --args --new-window 'https://github.com/camunda/camunda-docs'",
    "mode main",
]


# CONFIG MODE
# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.config.binding]

esc = ['reload-config', 'mode main']

## save session
s = ['exec-and-forget ~/.aerospace/aerospace.save.sh', 'mode main']

## restore session
r = ['exec-and-forget ~/.aerospace/aerospace.restore.sh', 'mode main']


## assign apps to floating. (could also assign to workspaces)

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.toggl.daneel'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.todoist.mac.Todoist'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'us.zoom.xos'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'layout floating'
